Beginner Level Problem Statement: 
Managing C++ Files and Directories in Linux

`Objective`:  
Gain hands-on experience 
with basic Linux commands while working 
with a C++ project by 
    creating, 
    editing, 
    compiling, and 
    running simple programs.

---

`Tasks`:

1. Create a new directory called `my_cpp_project` for your C++ programs.
    mkdir my_cpp_project

2. Change into the `my_cpp_project` directory.
    cd my_cpp_project

3. Create a C++ file named `greet.cpp` 
   in the `my_cpp_project` directory.
    nano greet.cpp

4. Write a C++ program inside `greet.cpp` 
that asks the user for their name and prints a greeting message.

        #include <iostream>
        #include <cstdlib>

        using std::cout;
        using std::cin;
        using std::endl;

        int main(){
            char name[255];

            cout << "Enter the name:" << endl;
            cin >> name;
            cout << "Hello " << name << "!!!" << endl;

            return EXIT_SUCCESS;

        }

5. Compile the `greet.cpp` program into an executable.
    g++ greet.cpp

6. Run the compiled executable and ensure 
   that it prompts for the user’s name and displays the greeting.

        ./a.out
        Enter the name:
        Nayana
        Hello Nayana!!!

7. Use a Linux command to display the contents of `greet.cpp`.
    cat greet.cpp

        #include <iostream>
        #include <cstdlib>

        using std::cout;
        using std::cin;
        using std::endl;

        int main(){
            char name[255];

            cout << "Enter the name:" << endl;
            cin >> name;
            cout << "Hello " << name << "!!!" << endl;

            return EXIT_SUCCESS;

        }

8.  Modify the `greet.cpp` file 
    to add a simple farewell message and save the changes.

        #include <iostream>
        #include <cstdlib>

        using std::cout;
        using std::cin;
        using std::endl;

        int main(){
            char name[255];

            cout << "Enter the name:" << endl;
            cin >> name;
            cout << "Hello " << name << "!!!" << endl;
            cout << "Good Bye!" ;
            return EXIT_SUCCESS;

        }

9. Compile and run the modified program 
   to ensure it works as expected.
        Enter the name:
        Nayana
        Hello Nayana!!!
        Good Bye!

10. Remove the `greet.cpp` file once you're done.
    rm greet.cpp

11. Check the contents of the `my_cpp_project` directory, and 
    remove the directory if it’s empty.
    mkdir my_cpp_project

---

`Goal`:  
    Through this task, you'll practice 
    using basic Linux commands such as 
        directory creation, 
        text file manipulation, 
        compiling, and 
        running programs, 
    helping you become more familiar 
    with the Linux environment for C++ development.
